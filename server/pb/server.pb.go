// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.19.6
// source: server/pb/server.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_UNKNOWN Status = 0
	Status_SUCCESS Status = 1
	Status_FAILURE Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "FAILURE",
	}
	Status_value = map[string]int32{
		"UNKNOWN": 0,
		"SUCCESS": 1,
		"FAILURE": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_server_pb_server_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_server_pb_server_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{0}
}

type GetVolumeGroupNamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeGroupNamesRequest) Reset() {
	*x = GetVolumeGroupNamesRequest{}
	mi := &file_server_pb_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeGroupNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeGroupNamesRequest) ProtoMessage() {}

func (x *GetVolumeGroupNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeGroupNamesRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeGroupNamesRequest) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{0}
}

type GetVolumeGroupNamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeGroups  []string               `protobuf:"bytes,1,rep,name=volume_groups,json=volumeGroups,proto3" json:"volume_groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeGroupNamesResponse) Reset() {
	*x = GetVolumeGroupNamesResponse{}
	mi := &file_server_pb_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeGroupNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeGroupNamesResponse) ProtoMessage() {}

func (x *GetVolumeGroupNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeGroupNamesResponse.ProtoReflect.Descriptor instead.
func (*GetVolumeGroupNamesResponse) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{1}
}

func (x *GetVolumeGroupNamesResponse) GetVolumeGroups() []string {
	if x != nil {
		return x.VolumeGroups
	}
	return nil
}

type GetVolumeGroupInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeGroup   string                 `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeGroupInfoRequest) Reset() {
	*x = GetVolumeGroupInfoRequest{}
	mi := &file_server_pb_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeGroupInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeGroupInfoRequest) ProtoMessage() {}

func (x *GetVolumeGroupInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeGroupInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeGroupInfoRequest) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{2}
}

func (x *GetVolumeGroupInfoRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

type GetVolumeGroupInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	FreeSize      uint64                 `protobuf:"varint,3,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeGroupInfoResponse) Reset() {
	*x = GetVolumeGroupInfoResponse{}
	mi := &file_server_pb_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeGroupInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeGroupInfoResponse) ProtoMessage() {}

func (x *GetVolumeGroupInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeGroupInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVolumeGroupInfoResponse) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{3}
}

func (x *GetVolumeGroupInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVolumeGroupInfoResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetVolumeGroupInfoResponse) GetFreeSize() uint64 {
	if x != nil {
		return x.FreeSize
	}
	return 0
}

type CreateLVMVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeName    string                 `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	VolumeGroup   string                 `protobuf:"bytes,2,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLVMVolumeRequest) Reset() {
	*x = CreateLVMVolumeRequest{}
	mi := &file_server_pb_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLVMVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVMVolumeRequest) ProtoMessage() {}

func (x *CreateLVMVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVMVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateLVMVolumeRequest) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLVMVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *CreateLVMVolumeRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *CreateLVMVolumeRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CreateLVMVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeName    string                 `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	VolumePath    string                 `protobuf:"bytes,2,opt,name=volume_path,json=volumePath,proto3" json:"volume_path,omitempty"`
	BrickPath     string                 `protobuf:"bytes,3,opt,name=brick_path,json=brickPath,proto3" json:"brick_path,omitempty"`
	Status        Status                 `protobuf:"varint,4,opt,name=status,proto3,enum=server.Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLVMVolumeResponse) Reset() {
	*x = CreateLVMVolumeResponse{}
	mi := &file_server_pb_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLVMVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVMVolumeResponse) ProtoMessage() {}

func (x *CreateLVMVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVMVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateLVMVolumeResponse) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLVMVolumeResponse) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *CreateLVMVolumeResponse) GetVolumePath() string {
	if x != nil {
		return x.VolumePath
	}
	return ""
}

func (x *CreateLVMVolumeResponse) GetBrickPath() string {
	if x != nil {
		return x.BrickPath
	}
	return ""
}

func (x *CreateLVMVolumeResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *CreateLVMVolumeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeGroup   string                 `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumesRequest) Reset() {
	*x = GetVolumesRequest{}
	mi := &file_server_pb_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumesRequest) ProtoMessage() {}

func (x *GetVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumesRequest.ProtoReflect.Descriptor instead.
func (*GetVolumesRequest) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{6}
}

func (x *GetVolumesRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

type GetVolumesResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Volumes       []*CreateLVMVolumeResponse `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Status        Status                     `protobuf:"varint,2,opt,name=status,proto3,enum=server.Status" json:"status,omitempty"`
	Message       string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumesResponse) Reset() {
	*x = GetVolumesResponse{}
	mi := &file_server_pb_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumesResponse) ProtoMessage() {}

func (x *GetVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumesResponse.ProtoReflect.Descriptor instead.
func (*GetVolumesResponse) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetVolumesResponse) GetVolumes() []*CreateLVMVolumeResponse {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *GetVolumesResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *GetVolumesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetVolumeInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeGroup   string                 `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	VolumeName    string                 `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeInfoRequest) Reset() {
	*x = GetVolumeInfoRequest{}
	mi := &file_server_pb_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeInfoRequest) ProtoMessage() {}

func (x *GetVolumeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeInfoRequest) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetVolumeInfoRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *GetVolumeInfoRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

type GetVolumeInfoResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	VolumeGroup        string                 `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`                        // Name of the Volume Group (VG)
	VolumeRelativePath string                 `protobuf:"bytes,2,opt,name=volume_relative_path,json=volumeRelativePath,proto3" json:"volume_relative_path,omitempty"` // Relative path of the volume within VG
	VolumeAbsolutePath string                 `protobuf:"bytes,3,opt,name=volume_absolute_path,json=volumeAbsolutePath,proto3" json:"volume_absolute_path,omitempty"` // Absolute path of the volume
	BrickPath          string                 `protobuf:"bytes,4,opt,name=brick_path,json=brickPath,proto3" json:"brick_path,omitempty"`                              // Mount point or specific brick path
	Size               uint64                 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                                                        // Total size of the volume in bytes
	FreeSize           uint64                 `protobuf:"varint,6,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`                                // Free space in the volume in bytes
	AllocatedSize      uint64                 `protobuf:"varint,7,opt,name=allocated_size,json=allocatedSize,proto3" json:"allocated_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetVolumeInfoResponse) Reset() {
	*x = GetVolumeInfoResponse{}
	mi := &file_server_pb_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeInfoResponse) ProtoMessage() {}

func (x *GetVolumeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVolumeInfoResponse) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetVolumeInfoResponse) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *GetVolumeInfoResponse) GetVolumeRelativePath() string {
	if x != nil {
		return x.VolumeRelativePath
	}
	return ""
}

func (x *GetVolumeInfoResponse) GetVolumeAbsolutePath() string {
	if x != nil {
		return x.VolumeAbsolutePath
	}
	return ""
}

func (x *GetVolumeInfoResponse) GetBrickPath() string {
	if x != nil {
		return x.BrickPath
	}
	return ""
}

func (x *GetVolumeInfoResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetVolumeInfoResponse) GetFreeSize() uint64 {
	if x != nil {
		return x.FreeSize
	}
	return 0
}

func (x *GetVolumeInfoResponse) GetAllocatedSize() uint64 {
	if x != nil {
		return x.AllocatedSize
	}
	return 0
}

type DeleteVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeGroup   string                 `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	VolumeName    string                 `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeRequest) Reset() {
	*x = DeleteVolumeRequest{}
	mi := &file_server_pb_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeRequest) ProtoMessage() {}

func (x *DeleteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteVolumeRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *DeleteVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

type DeleteVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=server.Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeResponse) Reset() {
	*x = DeleteVolumeResponse{}
	mi := &file_server_pb_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeResponse) ProtoMessage() {}

func (x *DeleteVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_pb_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVolumeResponse) Descriptor() ([]byte, []int) {
	return file_server_pb_server_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteVolumeResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *DeleteVolumeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_server_pb_server_proto protoreflect.FileDescriptor

var file_server_pb_server_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x22, 0x3e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x61, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x65,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x56, 0x4d, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x56, 0x4d, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x69, 0x63, 0x6b,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x91,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x56, 0x4d, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x95,
	0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a,
	0x14, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x58, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x2f, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x32, 0xce, 0x01, 0x0a,
	0x0b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x60, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xbf, 0x02,
	0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x56, 0x4d, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x56, 0x4d, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x1e, 0x5a, 0x1c, 0x70, 0x68, 0x64, 0x2e, 0x75, 0x71, 0x74, 0x72, 0x2e, 0x63, 0x61, 0x2f, 0x6c,
	0x76, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_server_pb_server_proto_rawDescOnce sync.Once
	file_server_pb_server_proto_rawDescData []byte
)

func file_server_pb_server_proto_rawDescGZIP() []byte {
	file_server_pb_server_proto_rawDescOnce.Do(func() {
		file_server_pb_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_pb_server_proto_rawDesc), len(file_server_pb_server_proto_rawDesc)))
	})
	return file_server_pb_server_proto_rawDescData
}

var file_server_pb_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_pb_server_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_server_pb_server_proto_goTypes = []any{
	(Status)(0),                         // 0: server.Status
	(*GetVolumeGroupNamesRequest)(nil),  // 1: server.GetVolumeGroupNamesRequest
	(*GetVolumeGroupNamesResponse)(nil), // 2: server.GetVolumeGroupNamesResponse
	(*GetVolumeGroupInfoRequest)(nil),   // 3: server.GetVolumeGroupInfoRequest
	(*GetVolumeGroupInfoResponse)(nil),  // 4: server.GetVolumeGroupInfoResponse
	(*CreateLVMVolumeRequest)(nil),      // 5: server.CreateLVMVolumeRequest
	(*CreateLVMVolumeResponse)(nil),     // 6: server.CreateLVMVolumeResponse
	(*GetVolumesRequest)(nil),           // 7: server.GetVolumesRequest
	(*GetVolumesResponse)(nil),          // 8: server.GetVolumesResponse
	(*GetVolumeInfoRequest)(nil),        // 9: server.GetVolumeInfoRequest
	(*GetVolumeInfoResponse)(nil),       // 10: server.GetVolumeInfoResponse
	(*DeleteVolumeRequest)(nil),         // 11: server.DeleteVolumeRequest
	(*DeleteVolumeResponse)(nil),        // 12: server.DeleteVolumeResponse
}
var file_server_pb_server_proto_depIdxs = []int32{
	0,  // 0: server.CreateLVMVolumeResponse.status:type_name -> server.Status
	6,  // 1: server.GetVolumesResponse.volumes:type_name -> server.CreateLVMVolumeResponse
	0,  // 2: server.GetVolumesResponse.status:type_name -> server.Status
	0,  // 3: server.DeleteVolumeResponse.status:type_name -> server.Status
	1,  // 4: server.VolumeGroup.GetVolumeGroupNames:input_type -> server.GetVolumeGroupNamesRequest
	3,  // 5: server.VolumeGroup.GetVolumeGroupInfo:input_type -> server.GetVolumeGroupInfoRequest
	5,  // 6: server.Volume.CreateVolume:input_type -> server.CreateLVMVolumeRequest
	7,  // 7: server.Volume.GetVolumes:input_type -> server.GetVolumesRequest
	9,  // 8: server.Volume.GetVolumeInfo:input_type -> server.GetVolumeInfoRequest
	11, // 9: server.Volume.DeleteVolume:input_type -> server.DeleteVolumeRequest
	2,  // 10: server.VolumeGroup.GetVolumeGroupNames:output_type -> server.GetVolumeGroupNamesResponse
	4,  // 11: server.VolumeGroup.GetVolumeGroupInfo:output_type -> server.GetVolumeGroupInfoResponse
	6,  // 12: server.Volume.CreateVolume:output_type -> server.CreateLVMVolumeResponse
	8,  // 13: server.Volume.GetVolumes:output_type -> server.GetVolumesResponse
	10, // 14: server.Volume.GetVolumeInfo:output_type -> server.GetVolumeInfoResponse
	12, // 15: server.Volume.DeleteVolume:output_type -> server.DeleteVolumeResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_server_pb_server_proto_init() }
func file_server_pb_server_proto_init() {
	if File_server_pb_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_pb_server_proto_rawDesc), len(file_server_pb_server_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_server_pb_server_proto_goTypes,
		DependencyIndexes: file_server_pb_server_proto_depIdxs,
		EnumInfos:         file_server_pb_server_proto_enumTypes,
		MessageInfos:      file_server_pb_server_proto_msgTypes,
	}.Build()
	File_server_pb_server_proto = out.File
	file_server_pb_server_proto_goTypes = nil
	file_server_pb_server_proto_depIdxs = nil
}
