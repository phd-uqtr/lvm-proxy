syntax = "proto3";

option go_package = "phd.uqtr.ca/lvm-proxy/server";
package server;


service VolumeGroup {
    rpc GetVolumeGroupNames(GetVolumeGroupNamesRequest) returns (GetVolumeGroupNamesResponse) {}
    rpc GetVolumeGroupInfo(GetVolumeGroupInfoRequest) returns (GetVolumeGroupInfoResponse) {}

}

message GetVolumeGroupNamesRequest {

}
message GetVolumeGroupNamesResponse {
    repeated string volume_groups = 1;
}

message GetVolumeGroupInfoRequest {
    string volume_group = 1;
}

message GetVolumeGroupInfoResponse {
    string name = 1;
    uint64 size = 2;
    uint64 free_size = 3;
}


service Volume {
    rpc CreateVolume(CreateLVMVolumeRequest) returns (CreateLVMVolumeResponse) {}
    rpc GetVolumes(GetVolumesRequest) returns (GetVolumesResponse) {}
    rpc GetVolumeInfo(GetVolumeInfoRequest) returns (GetVolumeInfoResponse) {}
    rpc DeleteVolume(DeleteVolumeRequest) returns (DeleteVolumeResponse) {}
}

enum Status {
    UNKNOWN = 0;
    SUCCESS = 1;
    FAILURE = 2;
}

message CreateLVMVolumeRequest {
    string volume_name = 1;
    string volume_group = 2;
    int64 size = 3;
}

message CreateLVMVolumeResponse {
    string volume_name = 1;
    string volume_path = 2;
    string brick_path  = 3;
    Status status = 4;
    string message = 5;

}
message GetVolumesRequest {
    string volume_group = 1;
}
message GetVolumesResponse {
    repeated CreateLVMVolumeResponse volumes = 1;
    Status status = 2;
    string message = 3;
}

message GetVolumeInfoRequest {
    string volume_group = 1;
    string volume_name = 2;
}
message GetVolumeInfoResponse {
    string volume_group = 1;    // Name of the Volume Group (VG)
    string volume_relative_path = 2; // Relative path of the volume within VG
    string volume_absolute_path = 3; // Absolute path of the volume
    string brick_path = 4;           // Mount point or specific brick path
    uint64 size = 5;                 // Total size of the volume in bytes
    uint64 free_size = 6;            // Free space in the volume in bytes
    uint64 allocated_size = 7;       
}

message DeleteVolumeRequest {
    string volume_group = 1;
    string volume_name = 2;
}

message DeleteVolumeResponse {
    Status status = 1;
    string message = 2;
}